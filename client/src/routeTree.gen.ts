/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Sign_upRouteImport } from './routes/sign_up'
import { Route as Sign_inRouteImport } from './routes/sign_in'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as MatchRouteImport } from './routes/match'
import { Route as Liked_youRouteImport } from './routes/liked_you'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatsIndexRouteImport } from './routes/chats/index'
import { Route as ProfileUserIdRouteImport } from './routes/profile/$userId'
import { Route as ChatsChatIdRouteImport } from './routes/chats/$chatId'

const Sign_upRoute = Sign_upRouteImport.update({
  id: '/sign_up',
  path: '/sign_up',
  getParentRoute: () => rootRouteImport,
} as any)
const Sign_inRoute = Sign_inRouteImport.update({
  id: '/sign_in',
  path: '/sign_in',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const MatchRoute = MatchRouteImport.update({
  id: '/match',
  path: '/match',
  getParentRoute: () => rootRouteImport,
} as any)
const Liked_youRoute = Liked_youRouteImport.update({
  id: '/liked_you',
  path: '/liked_you',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsIndexRoute = ChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileUserIdRoute = ProfileUserIdRouteImport.update({
  id: '/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsChatIdRoute = ChatsChatIdRouteImport.update({
  id: '/chats/$chatId',
  path: '/chats/$chatId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/liked_you': typeof Liked_youRoute
  '/match': typeof MatchRoute
  '/onboarding': typeof OnboardingRoute
  '/sign_in': typeof Sign_inRoute
  '/sign_up': typeof Sign_upRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/chats': typeof ChatsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/liked_you': typeof Liked_youRoute
  '/match': typeof MatchRoute
  '/onboarding': typeof OnboardingRoute
  '/sign_in': typeof Sign_inRoute
  '/sign_up': typeof Sign_upRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/chats': typeof ChatsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/liked_you': typeof Liked_youRoute
  '/match': typeof MatchRoute
  '/onboarding': typeof OnboardingRoute
  '/sign_in': typeof Sign_inRoute
  '/sign_up': typeof Sign_upRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/chats/': typeof ChatsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/liked_you'
    | '/match'
    | '/onboarding'
    | '/sign_in'
    | '/sign_up'
    | '/chats/$chatId'
    | '/profile/$userId'
    | '/chats'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/liked_you'
    | '/match'
    | '/onboarding'
    | '/sign_in'
    | '/sign_up'
    | '/chats/$chatId'
    | '/profile/$userId'
    | '/chats'
  id:
    | '__root__'
    | '/'
    | '/liked_you'
    | '/match'
    | '/onboarding'
    | '/sign_in'
    | '/sign_up'
    | '/chats/$chatId'
    | '/profile/$userId'
    | '/chats/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Liked_youRoute: typeof Liked_youRoute
  MatchRoute: typeof MatchRoute
  OnboardingRoute: typeof OnboardingRoute
  Sign_inRoute: typeof Sign_inRoute
  Sign_upRoute: typeof Sign_upRoute
  ChatsChatIdRoute: typeof ChatsChatIdRoute
  ProfileUserIdRoute: typeof ProfileUserIdRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign_up': {
      id: '/sign_up'
      path: '/sign_up'
      fullPath: '/sign_up'
      preLoaderRoute: typeof Sign_upRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign_in': {
      id: '/sign_in'
      path: '/sign_in'
      fullPath: '/sign_in'
      preLoaderRoute: typeof Sign_inRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/match': {
      id: '/match'
      path: '/match'
      fullPath: '/match'
      preLoaderRoute: typeof MatchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/liked_you': {
      id: '/liked_you'
      path: '/liked_you'
      fullPath: '/liked_you'
      preLoaderRoute: typeof Liked_youRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$userId': {
      id: '/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof ProfileUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/$chatId': {
      id: '/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/chats/$chatId'
      preLoaderRoute: typeof ChatsChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Liked_youRoute: Liked_youRoute,
  MatchRoute: MatchRoute,
  OnboardingRoute: OnboardingRoute,
  Sign_inRoute: Sign_inRoute,
  Sign_upRoute: Sign_upRoute,
  ChatsChatIdRoute: ChatsChatIdRoute,
  ProfileUserIdRoute: ProfileUserIdRoute,
  ChatsIndexRoute: ChatsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
